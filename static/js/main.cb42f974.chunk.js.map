{"version":3,"sources":["components/Header/Header.js","components/MainContainer/MainContainer.js","components/Form/Form.js","components/Input/Input.js","components/PrimaryButton/PrimaryButton.js","context/DataContext.js","components/Step1/Step1.js","components/Step2/Step2.js","components/FileInput/FileInput.js","components/Step3/Step3.js","components/Result/Result.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","textAlign","fontSize","fontFamily","color","textShadow","Header","styles","Typography","className","component","variant","marginTop","display","flexDirection","alignItems","MainContainer","children","props","Container","container","maxWidth","width","Form","noValidate","Input","forwardRef","ref","TextField","inputRef","fullWidth","PrimaryButton","Button","type","DataContext","createContext","DataProvider","useState","data","setData","Provider","value","setValues","values","prevData","useData","useContext","schema","yup","shape","firstName","matches","required","lastName","Step1","history","useHistory","useForm","defaultValues","mode","resolver","yupResolver","register","handleSubmit","errors","onSubmit","push","id","label","name","error","helperText","message","email","Step2","hasPhone","phoneNumber","watch","FormControlLabel","control","Checkbox","defaultValue","defaultChecked","onChange","event","target","parsePhoneNumberFromString","formatInternational","normalizePhoneNumber","backgroundColor","cursor","padding","icon","FileInput","render","onBlur","onDrop","getRootProps","getInputProps","Paper","CloudUpload","List","map","file","ind","ListItem","ListItemIcon","InsertDriveFile","ListItemText","primary","secondary","size","Step3","files","marginBottom","table","button","Result","success","setSuccess","entries","Object","filter","entry","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","toString","onClick","Swal","fire","to","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb42f974.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(3, 0, 2),\n        textAlign: \"center\",\n        fontSize: \"35px\",\n        fontFamily: \"Permanent Marker\",\n        color: \"green\",\n        textShadow: \"1px 1px green\"\n    }\n}))\n\nexport const Header = () => {\n    const styles = useStyles();\n\n    return <Typography className={styles.root} component=\"h1\" variant=\"h4\">React form</Typography>\n}\n\nexport default Header;","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop: theme.spacing(4),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    }\n}))\n\nexport const MainContainer = ({children, ...props}) => {\n    const styles = useStyles();\n\n    return (\n        <Container className={styles.root} container=\"main\" maxWidth=\"xs\" {...props}>\n            {children}\n        </Container>\n    )\n}\n\nexport default MainContainer;","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(1),\n    width: \"100%\"\n  },\n}));\n\nexport const Form = ({children, ...props}) => {\n  const styles = useStyles();\n\n  return (\n    <form className={styles.root} noValidate {...props}>\n        {children}\n    </form>\n  );\n};\n\nexport default Form;\n","import React, { forwardRef } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport const Input = forwardRef((props, ref) => {\n  return (\n    <TextField\n      variant=\"outlined\"\n      margin=\"normal\"\n      inputRef={ref}\n      fullWidth\n      {...props}\n    />\n  );\n});\n\nexport default Input;\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport const PrimaryButton = ({ children, props }) => {\n  const styles = useStyles();\n\n  return (\n    <Button\n      className={styles.root}\n      type=\"submit\"\n      fullWidth\n      variant=\"contained\"\n      color=\"primary\"\n      {...props}\n    >\n      {children}\n    </Button>\n  );\n};\n\nexport default PrimaryButton;\n","import React, { createContext, useContext, useState } from \"react\";\n\nconst DataContext = createContext();\n\nexport const DataProvider = ({ children }) => {\n  const [data, setData] = useState({});\n\n  const setValues = (values) => {\n    setData((prevData) => ({\n      ...prevData,\n      ...values,\n    }));\n  };\n\n  return (\n    <DataContext.Provider value={{ data, setValues }}>\n      {children}\n    </DataContext.Provider>\n  );\n};\n\nexport const useData = () => useContext(DataContext);\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MainContainer from \"../MainContainer/MainContainer\";\nimport Form from \"../Form/Form\";\nimport Input from \"../Input/Input\";\nimport PrimaryButton from \"../PrimaryButton/PrimaryButton\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useHistory } from \"react-router-dom\";\nimport { useData } from \"../../context/DataContext\";\n\nconst schema = yup.object().shape({\n  firstName: yup\n    .string()\n    .matches(/^([^0-9]*)$/, \"First name should not contain numbers\")\n    .required(\"First name is a required field\"),\n  lastName: yup\n    .string()\n    .matches(/^([^0-9]*)$/, \"Last name should not contain numbers\")\n    .required(\"Last name is a required field\"),\n});\n\nexport const Step1 = () => {\n  const history = useHistory();\n  const { data, setValues } = useData();\n  const { register, handleSubmit, errors } = useForm({\n    defaultValues: {\n      firstName: data.firstName,\n      lastName: data.lastName,\n    },\n    mode: \"onBlur\",\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmit = (data) => {\n    history.push(\"/step2\");\n    setValues(data);\n  };\n\n  return (\n    <MainContainer>\n      <Typography component=\"h2\" variant=\"h4\">\n        Step 1\n      </Typography>\n\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Input\n          ref={register}\n          id=\"firstName\"\n          type=\"text\"\n          label=\"First Name\"\n          name=\"firstName\"\n          required\n          error={!!errors.firstName}\n          helperText={errors?.firstName?.message}\n        />\n        <Input\n          ref={register}\n          id=\"lastName\"\n          type=\"text\"\n          label=\"Last Name\"\n          name=\"lastName\"\n          required\n          error={!!errors.lastName}\n          helperText={errors?.lastName?.message}\n        />\n        <PrimaryButton>Next</PrimaryButton>\n      </Form>\n    </MainContainer>\n  );\n};\n\nexport default Step1;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MainContainer from \"../MainContainer/MainContainer\";\nimport Form from \"../Form/Form\";\nimport Input from \"../Input/Input\";\nimport PrimaryButton from \"../PrimaryButton/PrimaryButton\";\nimport * as yup from \"yup\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useHistory } from \"react-router-dom\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport parsePhoneNumberFromString from \"libphonenumber-js\";\nimport { useData } from \"../../context/DataContext\";\n\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .email(\"Email should have correct format\")\n    .required(\"Email is a required field\"),\n});\n\nconst normalizePhoneNumber = (value) => {\n  const phoneNumber = parsePhoneNumberFromString(value);\n  if (!phoneNumber) {\n    return value;\n  } else {\n    return phoneNumber.formatInternational();\n  }\n};\n\nexport const Step2 = () => {\n  const { data, setValues } = useData();\n\n  const history = useHistory();\n  const { register, handleSubmit, errors, watch } = useForm({\n    defaultValues: {\n      email: data.email,\n      hasPhone: data.hasPhone,\n      phoneNumber: data.phoneNumber,\n    },\n    mode: \"onBlur\",\n    resolver: yupResolver(schema),\n  });\n\n  const hasPhone = watch(\"hasPhone\");\n\n  const onSubmit = (data) => {\n    history.push(\"/step3\");\n    setValues(data);\n  };\n\n  return (\n    <MainContainer>\n      <Typography component=\"h2\" variant=\"h4\">\n        Step 2\n      </Typography>\n\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <Input\n          ref={register}\n          id=\"email\"\n          type=\"email\"\n          label=\"Email\"\n          name=\"email\"\n          required\n          error={!!errors.email}\n          helperText={errors?.email?.message}\n        />\n\n        <FormControlLabel\n          control={\n            <Checkbox\n              defaultValue={data.hasPhone}\n              defaultChecked={data.hasPhone}\n              name=\"hasPhone\"\n              inputRef={register}\n              color=\"primary\"\n            />\n          }\n          label=\"Do you have a phone\"\n        />\n\n        {hasPhone && (\n          <Input\n            ref={register}\n            id=\"phoneNumber\"\n            type=\"tel\"\n            label=\"Phone Number\"\n            name=\"phoneNumber\"\n            onChange={(event) => {\n              event.target.value = normalizePhoneNumber(event.target.value);\n            }}\n          />\n        )}\n\n        <PrimaryButton>Next</PrimaryButton>\n      </Form>\n    </MainContainer>\n  );\n};\n\nexport default Step2;\n","import React from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport { CloudUpload, InsertDriveFile } from \"@material-ui/icons\";\nimport { Controller } from \"react-hook-form\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\n// import * as shortid from \"shortid\";\nimport {\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: \"#eee\",\n    textAlign: \"center\",\n    cursor: \"pointer\",\n    color: \"#333\",\n    padding: \"10px\",\n    marginTop: \"20px\",\n  },\n  icon: {\n    marginTop: \"16px\",\n    color: \"#888\",\n    fontSize: \"42px\",\n  },\n}));\n\nconst FileInput = ({ control, name }) => {\n  const styles = useStyles();\n\n  return (\n    <Controller\n      control={control}\n      name={name}\n      defaultValue={[]}\n      render={({ onChange, onBlur, value }) => (\n        <>\n          <Dropzone onDrop={onChange}>\n            {({ getRootProps, getInputProps }) => (\n              <Paper\n                className={styles.root}\n                {...getRootProps()}\n                variant=\"outlined\"\n              >\n                <CloudUpload className={styles.icon} />\n                <input {...getInputProps()} name={name} onBlur={onBlur} />\n                <p>Drag 'n' drop files here, or click to select files</p>\n              </Paper>\n            )}\n          </Dropzone>\n          <List>\n            {value.map((file, ind) => (\n              <ListItem key={ind}>\n                <ListItemIcon>\n                  <InsertDriveFile />\n                </ListItemIcon>\n                <ListItemText primary={file.name} secondary={file.size} />\n              </ListItem>\n            ))}\n          </List>\n        </>\n      )}\n    />\n  );\n};\n\nexport default FileInput;\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport FileInput from \"../FileInput/FileInput\";\nimport Form from \"../Form/Form\";\nimport MainContainer from \"../MainContainer/MainContainer\";\nimport { useForm } from \"react-hook-form\";\nimport PrimaryButton from \"../PrimaryButton/PrimaryButton\";\nimport { useHistory } from \"react-router-dom\";\nimport { useData } from \"../../context/DataContext\";\n\nconst Step3 = () => {\n  const { data, setValues } = useData();\n\n  const history = useHistory();\n  const { control, handleSubmit } = useForm({\n    defaultValues: {\n      files: data.files,\n    },\n  });\n\n  const onSubmit = (data) => {\n    history.push(\"/result\");\n    setValues(data);\n  };\n\n  return (\n    <MainContainer>\n      <Typography>Step 3</Typography>\n      <Form onSubmit={handleSubmit(onSubmit)}>\n        <FileInput name=\"files\" control={control} />\n        <PrimaryButton>Next</PrimaryButton>\n      </Form>\n    </MainContainer>\n  );\n};\n\nexport default Step3;\n","import {\n  Table,\n  TableHead,\n  Typography,\n  TableRow,\n  TableBody,\n  TableCell,\n  ListItem,\n  List,\n  ListItemIcon,\n  ListItemText,\n  makeStyles,\n  TableContainer,\n  Button,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport MainContainer from \"../MainContainer/MainContainer\";\nimport { useData } from \"../../context/DataContext\";\nimport { Link } from \"react-router-dom\";\nimport { InsertDriveFile } from \"@material-ui/icons\";\nimport Swal from \"sweetalert2\";\nimport Confetti from \"react-confetti\";\n\nconst useStyles = makeStyles({\n  root: {\n    marginBottom: \"30px\",\n  },\n  table: {\n    marginBottom: \"30px\",\n  },\n  button: {\n    marginBottom: \"30px\",\n  },\n});\n\nconst Result = () => {\n  const styles = useStyles();\n\n  const [success, setSuccess] = useState(false);\n\n  const { data } = useData();\n  const entries = Object.entries(data).filter((entry) => entry[0] !== \"files\");\n  const { files } = data;\n\n  // use with server - onSubmit:\n  const onSubmit = async () => {\n    const formData = new FormData();\n\n    if (data.files) {\n      data.files.forEach((file) => {\n        formData.append(\"files\", file, file.name);\n      });\n    }\n\n    entries.forEach((entry) => {\n      formData.append(entry[0], entry[1]);\n    });\n\n    const res = await fetch(\"http://localhost:4000/\", {\n      method: \"POST\",\n      body: formData,\n    });\n\n    if (res.status === 200) {\n      Swal.fire(\"Great job!\", \"You did this\");\n      setSuccess(true);\n    }\n  };\n\n  // use without server - onSubmit:\n  const onSubmit2 = () => {\n    Swal.fire(\"Great job!\", \"You did this\");\n    setSuccess(true);\n  };\n\n  return (\n    <MainContainer>\n      <Typography component=\"h2\" variant=\"h4\">\n        Form Values\n      </Typography>\n      <TableContainer className={styles.root}>\n        <Table className={styles.table}>\n          <TableHead>\n            <TableRow>\n              <TableCell>Field</TableCell>\n              <TableCell align=\"right\">Value</TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {entries.map((entry, ind) => (\n              <TableRow key={ind}>\n                <TableCell>{entry[0]}</TableCell>\n                <TableCell>{entry[1].toString()}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      {files && (\n        <>\n          <Typography component=\"h2\" variant=\"h5\">\n            Files\n          </Typography>\n          <List>\n            {files.map((file, ind) => (\n              <ListItem key={ind}>\n                <ListItemIcon>\n                  <InsertDriveFile />\n                </ListItemIcon>\n                <ListItemText primary={file.name} secondary={file.size} />\n              </ListItem>\n            ))}\n          </List>\n        </>\n      )}\n\n      <Button\n        className={styles.button}\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        type=\"button\"\n        onClick={onSubmit2}\n      >\n        Submit\n      </Button>\n      <Link to=\"/\">Start over</Link>\n\n      {success && <Confetti />}\n    </MainContainer>\n  );\n};\n\nexport default Result;\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport Header from \"./components/Header/Header\";\nimport Step1 from \"./components/Step1/Step1\";\nimport Step2 from \"./components/Step2/Step2\";\nimport Step3 from \"./components/Step3/Step3\";\nimport Result from \"./components/Result/Result\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Step1} />\n          <Route exact path=\"/step2\" component={Step2} />\n          <Route exact path=\"/step3\" component={Step3} />\n          <Route exact path=\"/result\" component={Result} />\n\n          <Redirect to=\"/\" />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {DataProvider} from './context/DataContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataProvider>\n      <App />\n    </DataProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}